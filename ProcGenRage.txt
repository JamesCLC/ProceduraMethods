Alright James,

My head is a bit fuzzy right now, so it's time to pause, process, prioritize, plan, proceed.

Pause - What's the current situation?

	I'm trying to get my cubes to spawn at an arbitrary angle to the previous. It appears as though
I can't pass in a bespoke matrix for every instance in the same way that I was passing in a Position
D3DVector3 because it doesn't look like I can define an appropriate Input Semantic.

Process - What solutions can I try?
	1) I can try using a seperate buffer rather than modifying the input struct. The issue here is
	that it doesn't really mesh with the instancing code very well.
	With the Instanced code, I sent a single object to a shader handler with the instancing code
	built into the object. The shader handler, however, only has a single matrix buffer that gets
	applied to every instance.

	2) I can take out the instancing code for now, and repurpose that later for multiple cacti rather
	than for multiple meshes within the same model. I would then be faced once again with the issue
	of spawning multiple meshes WITHOUT instancing.

	3) I've long suspected that creating a class to contain the actual L-System would be neccesary.
	There's no time like the present. If I design it with functions that correspond to the key functions
	of the application class, then I should theoretically be able to integrate my new class nicely.
	This would also be good for the structure of my code, which factors into my grade.
	Hopefully it will be possible to take what I learned from the Model Instancing code and apply it to
	create seperate instances of this class. 


Prioritize - What should I be doing right now?
	Create the Cactus Class

Plan - How am I going to do this?

- Each cactus is an instance of cactus class
- Cactus class has a function which, for a specified number of itterations, spawn cubes relative to the last one.
For the time being, I'll do this by creating a translation matrix based on the world matrix that gets slightly tweaked for each
peice of geometry in the plant. I'll have a Pipeline pass for each bit of geometry within the plant for the time being.
